<?xml version="1.0" encoding="UTF-8"?> 
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shop.mapper.MemberMapper">

	<insert id="memberJoin">
		insert into
		user(user_id,password,password_check,user_name,address_num,address,address_detail,phone,email,adminck,reg_date,account_name,account_bank,account_num)
		values(#{userId},#{password},#{passwordCheck},#{userName},#{addressNum},#{address},#{addressDetail},#{phone},#{email},0,now(),#{accountName},#{accountBank},#{accountNum});
	</insert>

	<!-- insert into user values(0,"관리자","민박강관리자","민박강관리자","관리자",12345,"관리자주소","관리자상세주소",010-0000-0000,"minparkang@naver.com",1,now(),"민박강","신한",000000000000); -->

	<!-- 아이디 중복검사 -->
	<select id="idCheck" resultType="int">

		select count(*) from user where
		user_id = #{user_id}
	</select>


	<!-- 아이디 찾기 -->
	<select id="findid" parameterType="String" resultType="String">
		select
		user_id from user where email = #{email}
	</select>


	<!-- 로그인 -->
	<select id="memberLogin" resultType="com.shop.model.User">
		select
		user_id,password,password_check,user_name,address_num,address,address_detail,phone,email,adminck,account_name,account_bank,account_num
		from user where user_id = #{userId} and
		password =#{password}
	</select>

	<!-- 회원목록 조회 -->
	<select id="getmemberList" resultType="com.shop.model.User">
		select
		user_id,password,password_check,user_name,address_num,address,address_detail,phone,email,adminck,account_name,account_bank,account_num
		from user
	</select>

	<!-- 회원정보 조회 -->
	<select id="getProfile" resultType="com.shop.model.User">

		select
		user_id,password,password_check,user_name,address_num,address,address_detail,phone,email,adminck,account_name,account_bank,account_num
		from user where
		user_id = #{userId}

	</select>

	<!-- 회원정보 수정 -->
	<update id="profileUpdate">
		update user set
		password=#{password},password_check=#{passwordCheck},user_name=#{userName},address_num=#{addressNum},address=#{address},address_detail=#{addressDetail},
		phone=#{phone},email=#{email},account_name=#{accountName},account_bank=#{accountBank},account_num=#{accountNum}
		where user_id=#{userId}
	</update>

	<!-- 회원정보 삭제 -->
	<delete id="profileDelete">
		delete from user where user_id = #{userId}
	</delete>
</mapper>