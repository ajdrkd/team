<?xml version="1.0" encoding="UTF-8"?> 
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shop.mapper.MemberMapper">

	<insert id="memberJoin">
		insert into
		user(user_id,password,password_check,user_name,address_num,address,address_detail,phone,email,adminck,account_name,account_bank,account_num)
		values(#{userId},#{password},#{passwordCheck},#{userName},#{addressNum},#{address},#{addressDetail},#{phone},#{email},0,#{accountName},#{accountBank},#{accountNum});
	</insert>

	<!-- 아이디 중복검사 -->
	<select id="idCheck" resultType="int">

		select count(*) from user where
		user_id = #{user_id}
	</select>


	<!-- 아이디 찾기 -->
	<select id="findid" parameterType="String" resultType="String">
		select
		user_id from user where email = #{email}
	</select>


	<!-- 로그인 -->
	<select id="memberLogin" resultType="com.shop.model.User">
		select *
		from user where
		user_id = #{userId} and
		password =#{password}
	</select>

	<!-- 회원목록 조회 -->
	<select id="getmemberList" resultType="com.shop.model.User">
		select
		* from user
	</select>

	<!-- 검색 조건문 -->
	<sql id="criteria">
		<trim prefix="where (" suffix=")" prefixOverrides="OR">
			<foreach collection="typeArr" item="type">
				<trim prefix="OR">
					<choose>
						<when test="type == 'I'.toString()">
							user_id like concat('%',#{keyword},'%')
						</when>
						<when test="type == 'N'.toString()">
							user_name like concat('%',#{keyword},'%')
						</when>
						<when test="type == 'D'.toString()">
							reg_date like concat('%',#{keyword},'%' )
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql>


	<!-- 회원목록 (페이징) -->
	<select id="getListPaging" resultType="com.shop.model.User">
		select * from ( select
		user_id,user_name,address_num,address,address_detail,phone,email,adminck,reg_date
		from user
		<if test="keyword != null">
			<include refid="criteria"></include>
		</if>
		order by reg_date asc) as Page limit #{skip},#{amount}
	</select>
	<!-- where user_id like concat('%',#{keyword},'%') -->

	<!-- 게시물 총 개숫 -->
	<select id="getTotal" resultType="int">
		select count(*) from user
		<if test="keyword != null">
			<include refid="criteria"></include>
		</if>
	</select>

	<!-- 회원정보 조회 -->
	<select id="getProfile" resultType="com.shop.model.User">
		select
		user_id,password,password_check,user_name,address_num,address,address_detail,phone,email,adminck,account_name,account_bank,account_num
		from user where
		user_id = #{userId}
	</select>

	<!-- 회원정보 수정 -->
	<update id="profileUpdate">
		update user set
		password=#{password},password_check=#{passwordCheck},user_name=#{userName},address_num=#{addressNum},address=#{address},address_detail=#{addressDetail},
		phone=#{phone},email=#{email},account_name=#{accountName},account_bank=#{accountBank},account_num=#{accountNum}
		where user_id=#{userId}
	</update>

	<!-- 회원정보 삭제 -->
	<delete id="profileDelete">
		delete from user where user_id = #{userId} and
		password =#{password}
	</delete>
	<!-- 장바구니 추가-->
	<insert id="addCart">
 	 insert into shopping_cart (cart_id,user_id,product_id,product_name,cart_productsize,cart_productColor,cart_productOption,cart_price,cart_qty,cart_update)
     values (#{cartId},#{userId},#{productId},#{productName},#{cartProductsize},#{cartProductColor},#{cartProductOption},#{cartPrice},#{cartQty},#{cartUpdate})
	</insert>
	<!-- 장바구니 목록-->
	<select id="selectCart" resultType="com.shop.model.ShoppingCart">
	select c.cart_id,c.user_id,c.product_id,c.product_name,u.user_name,u.email,u.phone,u.address,u.account_num,c.cart_productsize,c.cart_productColor,c.cart_price,
		c.cart_qty,i.file_name,i.upload_path,i.uuid
		from product p,shopping_cart c,user u
		join (select
		product_id
		,max(case when image_id=1 then file_name end) as file_name
		,max(case when image_id=1 then upload_path end) as upload_path
		,max(case when image_id=1 then uuid end) as uuid
		from product_img group by product_id) i 
        where p.product_id=i.product_id and p.product_id=c.product_id and c.user_id=u.user_id and u.user_id=#{userId}
	</select>
	
	<!-- 수량변경 -->
	<select id="selectCartId" resultType="com.shop.model.ShoppingCart">
	select cart_id,product_name,cart_qty from shopping_cart where cart_id=#{cartId}
	</select>
	<update id="updateCartQty">
	update shopping_cart set cart_qty=#{cartQty} where cart_id=#{cartId}
	</update>
	
	<!-- 장바구니삭제 -->
	<delete id="deleteCart">
	delete from shopping_cart where cart_id =#{cartId}
	</delete>
	<!-- 주문 삽입 -->
	<insert id="orderinsert">
	 insert into user_order (order_id,user_id,order_phone,order_address,order_address_detail,order_address_num,order_price,order_date)
     values (#{orderId},#{userId},#{orderPhone},#{orderAddress},#{orderAddressDetail},#{orderAddressNum},#{orderPrice},#{orderDate})
	</insert>
	<insert id="orderinsertDetail">
	 insert into order_detail(order_detail_id,order_id,product_name, order_size,order_inventory)
     select  0,#{orderId},product_name, cart_productsize, cart_qty from shopping_cart; 
	</insert>
	
	
	
</mapper> 